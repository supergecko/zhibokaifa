<template>
	<view class="page">
		<live-pusher
		id='livePusher'
		ref="livePusher" 
		class="livePusher" 
		:url="tuiSrc"
		:mode="mode"
		:enable-camera="enableCamera" 
		:auto-focus="true" 
		:device-position="position"
		:beauty="beauty" 
		:whiteness="whiteness"
		aspect="9:16" 
		@statechange="statechange" 
		@netstatus="netstatus" 
		@error = "error"
		:style="'height: '+windowHeight+'px;'"
		style="width: 750rpx;"></live-pusher>
		
		<!-- 头部 -->
		<view style="position: fixed;left: 0;right: 0;" :style="'top:'+statusBarHeight+'px'">
			<!-- 个人信息|观看详细信息 -->
			<view style="height: 80rpx;" class="px-2 flex justify-between align-center">
				<view style="width: 325rpx;background-color: rgba(0,0,0,0.4);" class="flex rounded-circle">
					<view class="p">
						<image :src="liveHeadImg || '/static/tabbar/min.png'" style="width: 70rpx;height: 70rpx;" class="rounded-circle"></image>
					</view>
					<view class="flex-1 flex flex-column justify-center">
						<!-- <text class="text-white font">{{ user.nickname || user.username }}</text> -->
						<text class="text-white font" style="overflow: hidden">{{liveInfo.title}}</text>
						<!-- 关注人数 -->
						<view style="display: flex;flex-direction: row;">
							<text class="text-white font-sm" style="font-size: 24rpx;">关注人数:</text>
							<text class="text-white font-sm" style="font-size: 24rpx;">{{followNumber}}</text>
						</view>
						
					</view>
					<!-- <view class="p">
						<view class="rounded-circle flex align-center justify-center" style="width: 70rpx;height: 70rpx;background-color: #88BDE2;">
							<text class="text-white">+</text>
						</view>
					</view> -->
				</view>
				
				<view style="width: 325rpx;background-color: rgba(0,0,0,0.4);" class="flex rounded-circle">
					<scroll-view scroll-x="true" class="flex-1 flex">
						<view class="p" v-for="(item,index) in list" :key="index">
							<image :src="item.head_img || '/static/tabbar/min.png'" style="width: 70rpx;height: 70rpx;" class="rounded-circle"></image>
						</view>
					</scroll-view>
					<view class="p">
						<view class="rounded-circle flex align-center justify-center" style="width: 70rpx;height: 70rpx;background-color: #88BDE2;">
							<text class="text-white font-sm">{{ list.length }}</text>
						</view>
					</view>
				</view>
			</view>
			<!-- 收到钻石 -->
			<!-- <view style="height: 80rpx;" class="px-2 my-2">
				<view style="width: 325rpx;background-color: rgba(0,0,0,0.4);" class="flex rounded-circle align-center">
					<view class="p">
						<text class="text-warning">钻石</text>
					</view>
					<view class="flex-1 flex flex-column justify-center">
						<text class="text-white font">{{ detail.coin }}</text>
					</view>
				</view>
			</view> -->
			<view style="height: 200rpx;"></view>
			<!-- 收到礼物 -->
			<f-gift ref="gift"></f-gift>
		</view>
		
		<!-- 弹幕 -->
		<f-danmu ref="danmu"></f-danmu>
		
		<!-- 底部 -->
		<view style="position: fixed;left: 0;bottom: 0;right: 0;height: 120rpx;" class="flex align-center justify-between">
			
			<view class="flex-1 flex flex-column align-center justify-center" v-for="(item,index) in btns" :key="index" @click="handleBottomEvent(item)">
				<text class="iconfont text-white mb-1">{{item.icon}}</text>
				<text class="text-white font">{{item.name}}</text>
			</view>
		</view>
		
		<uni-popup type="bottom" ref="popup">
			<view class="bg-white">
				<view class="flex align-center justify-center border-bottom" style="height: 90rpx;">
					<text class="font-md">{{popupTitle}}</text>
				</view>
				<!-- 画质选择 -->
				<view v-if="popupType === 'mode'">
					<view class="flex align-center justify-center py-2" v-for="(item,index) in modeList" :key="index" :class="mode === item.type ? 'bg-main' : ''" @click="chooseMode(item)">
						<text class="font-md" :class="mode === item.type ? 'text-white' : ''">{{item.desc}}</text>
					</view>
				</view>
				<!-- 美颜 -->
				<view v-else-if="popupType === 'beauty'">
					<slider :min="0" :max="9" :step="1" :value="beauty" :block-size="18" show-value @change="handleSliderChange"/>
				</view>
				<!-- 美白 -->
				<view v-else-if="popupType === 'whiteness'">
					<slider :min="0" :max="9" :step="1" :value="whiteness" :block-size="18" show-value @change="handleSliderChange"/>
				</view>
				<!-- 更多 -->
				<view v-else class="flex flex-wrap">
					<!-- <view class="flex flex-column align-center justify-center" style="width: 150rpx;height: 150rpx;" @click="jinyan">
						<text class="iconfont mb-1">&#xe611;</text>
						<text class="font">禁言</text>
					</view> -->
					<view class="flex flex-column align-center justify-center" style="width: 150rpx;height: 150rpx;" @click="jieyan">
						<text class="iconfont mb-1">&#xe611;</text>
						<text class="font">解言</text>
					</view>
					<view class="flex flex-column align-center justify-center" style="width: 150rpx;height: 150rpx;" @click="back">
						<text class="iconfont mb-1">&#xe64d;</text>
						<text class="font">退出</text>
					</view>
				</view>
				
				<view class="f-divider"></view>
				<view  class="flex align-center justify-center"
				style="height: 90rpx;" hover-class="bg-light"
				@click="closePopup">
					<text class="font-md">取消</text>
				</view>
			</view>
		</uni-popup>
		
		<uni-popup type="center" ref="jinyan">
			<view class="bg-white" style="width: 600rpx;height: 800rpx;border-radius: 20rpx;padding: 10rpx;">
				<scroll-view :scroll-top="0" scroll-y="true" class="scroll-Y" @scrolltoupper="upper" @scrolltolower="lower"
					@scroll="scroll" style="height: 800rpx">
					<view v-for="(item,i) in 100" :key="i">
						<view class="jinyanWarp">
							<image :src="item.avatar || defaultAvatar" style="width: 70rpx;height: 70rpx;" class="rounded-circle"></image>
							<text>用户昵称{{i}}</text>
							<view class="jinyanBtn">
								<text class="text-white">禁言</text>
							</view>
						</view>
					</view>
				</scroll-view>
			</view>
		</uni-popup>
		
		<uni-popup type="center" ref="jieyan">
			<view class="bg-white" style="width: 600rpx;height: 800rpx;border-radius: 20rpx;padding: 10rpx;">
				<scroll-view :scroll-top="0" scroll-y="true" class="scroll-Y" @scrolltoupper="upper" @scrolltolower="lower"
					@scroll="scroll" style="height: 800rpx">
					<view v-for="(item,i) in jieyanList" :key="i">
						<view class="jinyanWarp">
							<image :src="item.head_img || defaultAvatar" style="width: 70rpx;height: 70rpx;" class="rounded-circle"></image>
							<text>{{item.nickname}}</text>
							<view class="jinyanBtn" style="background: #19A03F" @click="unforbidUser(item.user_id)">
								<text class="text-white">解言</text>
							</view>
						</view>
					</view>
				</scroll-view>
			</view>
		</uni-popup>
		
	</view>
</template>

<script>
	import fGift from '@/components/live/f-gift.vue';
	import fDanmu from '@/components/live/f-danmu.vue';
	import uniPopup from '@/components/uni-ui/uni-popup/uni-popup.vue';
	import $C from '@/common/config.js';
	import $H from '@/common/request.js';
	// import demoGifts from '@/demo/gifts.js';
	import { mapState } from 'vuex';
	
	export default {
		components: {
			fGift,
			fDanmu,
			uniPopup
		},
		data() {
			return {
				defaultAvatar:"/static/tabbar/min.png",
				statusBarHeight:0,
				content:"",
				gifts:[],//礼物列表
				giftActiveId:0,
				liveTitle:'',//直播间标题
				tuiSrc:'',//推流
				mode:"FHD",
				enableCamera:true,
				position:"back",
				beauty:0,
				whiteness:0,
				windowHeight:0,
				context:null,
				modeList:[{
					type:"SD",
					desc:"标清"
				},{
					type:"HD",
					desc:"高清"
				},{
					type:"FHD",
					desc:"超清"
				}],
				popupType:"mode",
				
				btns:[{
					name:"翻转",
					icon:"\ue605",
					event:"switchCamera"
				}
				// ,{
				// 	name:"画质",
				// 	icon:"\ue60c",
				// 	event:"openPopup",
				// 	params:"mode"
				// },{
				// 	name:"美颜",
				// 	icon:"\ue632",
				// 	event:"openPopup",
				// 	params:"beauty"
				// },{
				// 	name:"美白",
				// 	icon:"\ue631",
				// 	event:"openPopup",
				// 	params:"whiteness"
				// }
				,{
					name:"更多",
					icon:"\ue84b",
					event:"openPopup",
					params:"more"
				}],
				list:[],//直播观看用户
				liveInfo:{},//直播间相关信息
				liveHeadImg:'',//主播头像
				liveId:0,//直播间主播id
				jieyanList:[],//解言列表
				// 是否开始推流
				isStart:false,
				isPause:false,
				isget:false,
				followNumber:0 //关注人数
			}
		},
		onLoad(e) {
			let res = uni.getSystemInfoSync()
			this.statusBarHeight = res.statusBarHeight
			this.windowHeight = res.windowHeight
			if(e.data){
				let d = JSON.parse(decodeURIComponent(e.data))
				this.liveId = d.data.uid //直播间主播的id
				this.liveInfo = d.data
				this.followNumber = d.data.focus
				this.liveHeadImg = $C.imageUrl + uni.getStorageSync('user').head_img
				// this.liveInfo.photo = $C.imageUrl + this.liveInfo.photo
				this.tuiSrc = d.data.push_url
			}
			// 监听全局事件
			uni.$on('live',this.handleLiveEvent)
		},
		onReady() {
			this.context = uni.createLivePusherContext('livePusher', this)
			setTimeout(() => {
				this.startPreview()
				// 开始推流
				this.start()
			}, 1000)
			
		},
		destroyed() {
			// 离开直播间
			this.joinOrLeaveLive('leave')
			// 移除全局事件
			uni.$off('live',this.handleLiveEvent)
		},
		computed: {
			...mapState({
				user:state=>state.user,
				socket:state=>state.socket,
				token:state=>state.token,
			}),
			popupTitle() {
				let o = {
					mode:"画质",
					beauty:"美颜",
					whiteness:"美白",
					more:"更多"
				}
				return o[this.popupType]
			},
		},
		onBackPress() {
			if(!this.isget){
				this.back()
				return true
			}
		},
		methods: {
			jinyan(){
				this.$refs.jinyan.open()
			},
			//主播关闭直播
			stopLive(){
				let data = {
					user_id: uni.getStorageSync('user').id,
					live_id:this.liveInfo.id
				}
				$H.post('/live/stop_live', data).then(res => {
					console.log('主播关闭')
					console.log(res)
				}).catch(err => {
					console.log(err)
				})
			},
			//获取解言列表
			jieyan(){
				let data = {
					teacher_id: this.liveId
				}
				$H.post('/live/forbid_userlist', data).then(res => {
					this.jieyanList = res.datas
					console.log(this.jieyanList)
					this.$refs.jieyan.open()
				}).catch(err => {
					console.log(err)
				})
			},
			
			//解除用户禁言
			unforbidUser(userID){
				let data = {
					user_id:userID,
					teacher_id: this.liveId
				}
				$H.post('/live/unforbid_user', data).then(res => {
					uni.showToast({
						title: res.msg,
						icon: 'none'
					});
					this.jieyan()
				}).catch(err => {
					console.log(err)
				})
			},
			// 退出直播
			back(){
				uni.showModal({
					content: '是否要退出直播间？',
					success: (res)=> {
						if (res.cancel) {
							return
						}
						this.stop()
						this.stopLive()
						this.isget = true
						uni.navigateBack({
							delta: 1
						});
						uni.showToast({
							title: '退出直播间成功',
							icon: 'none'
						});
					}
				});
			},
			// 开始推流
			start() {
				this.context.start({
					success: (a) => {
						this.isStart = true
						this.$store.dispatch('setType','teacher_')
						this.$store.dispatch('setLiveId',this.liveInfo.id)//传的是直播间分组id
						this.$store.dispatch('connectWebSocket')
						console.log("livePusher.start:" + JSON.stringify(a));
					}
				});
			},
			
			stop(){
				this.context.stop({
					success:()=>{
						this.isStart = false
					}
				})
			},
			handleLiveEvent(e) {
				let d = e.data
				switch (e.type) {
					case 'online':
						//需要后台给个参数来判断是否是加入直播间这个数组
						this.list = d.message.online_users
						break;
					case 'comment':
						this.$refs.danmu.send({
							id: d.id,//弹幕id
							name: d.username,
							content: d.message.conten,
							liveid: this.liveId,
							userId: d.userid
						})
						break;
					case 'system':
						this.$refs.danmu.upSystemContent(d.message.content)
						break;
					case 'gift':
						this.$refs.gift.send({
							avatar: d.user_head_img,
							username: d.username,
							gift_name: d.message.name,
							gift_image: d.message.photo,
							num: d.message.gift_number
						})
						break;
					case 'follow':
						this.followNumber = d.message.focus
						break;
					default:
						break;
				}
			},
			// 加入或离开直播间
			joinOrLeaveLive(type){
				if (type == "leave"){
					this.$store.dispatch('closeWebSocket')
				}
			},
			handleBottomEvent(item){
				this[item.event](item.params)
			},
			// 画质选择
			chooseMode(item){
				this.mode = item.type
				uni.showToast({
					title: '画质切换为' + item.desc,
					icon: 'none'
				});
				this.$refs.popup.close()
			},
			openPopup(type){
				this.popupType = type
				this.$refs.popup.open()
			},
			closePopup(){
				this.$refs.popup.close()
			},
			// 切换摄像头
			switchCamera(){
				this.context.switchCamera({
					success:(e)=>{
						this.position = this.position === 'back' ? 'front' : 'back'
					}
				})
			},
			// 开启预览
			startPreview(){
				this.context.startPreview({
					success:(e)=>{
						console.log('预览开启')
						console.log(e);
					}
				})
			},
			// 直播状态变化
			statechange(e){
				// console.log('直播状态变化')
				// console.log(e);
			},
			// 直播网络变化
			netstatus(e){
				// console.log('直播网络变化')
				// console.log(e);
			},
			error(e){
				console.log('直播错误')
				console.log(e);
			},
			handleSliderChange(e){
				this[this.popupType] = e.detail.value
			},
		}
	}
</script>

<style>
.page{
	flex: 1;
}
.btn{
	height: 80rpx;
	border-radius: 100rpx;
	background-color: rgba(255,255,255,0.12);
	align-items: center;
	justify-content: center;
}
.btn-icon{
	width: 80rpx;
	margin-right: 20rpx;
}
.jinyanWarp{
	display: flex;
	align-items: center;
	justify-content: space-around;
	flex-direction: row;
	margin-top: 10rpx;
	margin-bottom: 10rpx;
}
.jinyanBtn{
	background: red;
	width: 100rpx;
	border-radius: 20rpx;
	height: 60rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}
</style>
